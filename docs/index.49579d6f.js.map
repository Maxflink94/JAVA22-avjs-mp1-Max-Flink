{"mappings":"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","sources":["src/js/highscore.js","src/js/script.js"],"sourcesContent":["const url = 'https://highscorelist-78712-default-rtdb.europe-west1.firebasedatabase.app/Highscore.json';\n\n// Hämtar highscore från firebase\nexport async function getHighscoreList(){\n    const response = await fetch(url);\n    const highscoreList = response.json();\n\n    return highscoreList;\n}\n\n// Sortera HighscoreList efter vem som har mest Score\nfunction sortHighscoreList(highscoreList){\n\n    let array = [];\n\n    highscoreList.forEach(element => {\n        array.push(element);\n    });\n    array.sort((a, b) =>{\n        return a.score - b.score;\n    })\n\n    const sortedArray = array.reverse();\n\n    return sortedArray;\n}\n\n// Printar ut highscorelistan (UTAN CSS)\nfunction displayHighscoreList(sortedArray, div){\n\n    // for ( players in sortedArray ){\n\n    //     const highscoreh2 = document.createElement('h2');\n    //     highscoreh2.innerText = sortedArray[players].name + '  ' + sortedArray[players].score;\n    //     div.append(highscoreh2);\n        \n    // }\n\n    sortedArray.forEach(players =>{\n        const highscoreh2 = document.createElement('h2');\n        highscoreh2.innerText = players.name + '  ' + players.score;\n        div.append(highscoreh2);\n    });\n}\n\n// Uppdaterar (med PATCH/PUT/POST) highscore på firebase\nasync function putHighscoreList(sortedArray){\n\n    const options = {\n        method: 'PUT',\n        body: JSON.stringify(sortedArray),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n    }\n\n    const response = await fetch(url, options);\n    console.log(\"response from put\");\n    console.log(response);\n    const data = await response.json();\n    console.log(\"data response from put\")\n    console.log(data);\n\n}\n\nexport async function addPossHighscore(newAttempt) {\n    const highscoreList = await getHighscoreList();\n    console.log(\"Getting hs\");\n    console.log(highscoreList);\n    const allScores = [...highscoreList, newAttempt];\n    const sortedNewHighscoreList = sortHighscoreList(allScores);\n    console.log(\"sorted hs\");\n    console.log(sortedNewHighscoreList);\n    \n    sortedNewHighscoreList.pop();\n    console.log(\"poped hs\");\n    console.log(sortedNewHighscoreList);\n\n    await putHighscoreList(sortedNewHighscoreList);\n}\n\nexport async function showHighscoreList(div){\n    const highscoreList = await getHighscoreList();\n    const sortedHighscoreList = sortHighscoreList(highscoreList);\n    displayHighscoreList(sortedHighscoreList, div);\n}\n","import { showHighscoreList, addPossHighscore, getHighscoreList } from \"./highscore\";\n\nconst playerText = document.querySelector('#playerText');\nconst computerText = document.querySelector('#computerText');\nconst resultText = document.querySelector('#resultText');\n\nconst computerPoints = document.querySelector('#computerPoints');\nconst playerPoints = document.querySelector('#playerPoints');\n\nconst playerNameTxt = document.querySelector('#playerNameTxt');\nconst playerNameBtn = document.querySelector('#playerNameBtn');\n\nconst choiceBtns = document.querySelectorAll('.choiceBtn');\n\nconst restartBtn = document.querySelector('#restartBtn');\nconst winnerHeadline = document.querySelector('#winnerHeadline');\n\nconst welcomeDiv = document.querySelector('.welcomeDiv');\nconst gameDiv = document.querySelector('.gameDiv');\nconst winnerDiv = document.querySelector('.winnerDiv');\nconst highscoreDiv = document.querySelector('.highscoreDiv');\n\nlet playerScore = 0;\nlet computerScore = 0;\n\nlet player;\nlet computer;\nlet result;\nlet playerName = \"\";\n\nchoiceBtns.forEach(button => button.addEventListener('click', () => {\n    player = button.textContent;\n    computerTurn();\n    playerText.textContent = `${playerName}: ${player}`;\n    computerText.textContent = `Computer: ${computer}`;\n    resultText.textContent = checkWinner();\n    playerPoints.textContent = `${playerName} Points: ${playerScore}`;\n    computerPoints.textContent = `Computers Points: ${computerScore}`;\n    if(isThereAWinner()) {\n        setWinnerHeadline();\n        isGameDivHidden(true);\n        isWinnerDivHidden(false);\n    }\n}))\n\nplayerNameBtn.addEventListener('click', (event) => {\n    event.preventDefault();\n    const inputName = playerNameTxt.value;\n    if(inputName){\n        setName(playerNameTxt.value);\n        isWelcomeDivHidden(true);\n        isGameDivHidden(false);\n    }\n});\n\nrestartBtn.addEventListener('click', ()=>{\n\n    addPossHighscore({ name: playerName, score: playerScore });\n\n    playerScore = 0;\n    computerScore = 0;\n\n    player = \"\";\n    computer = \"\";\n    result = \"\";\n\n    playerName = \"\";\n    playerNameTxt.value = \"\";\n    isWinnerDivHidden(true);\n    isWelcomeDivHidden(false);\n    setTimeout(function(){ window. location. reload(); }, 200);\n})\n\nwindow.onload = function () {\n    showHighscoreList(highscoreDiv);\n}\n\nfunction isGameDivHidden(isHidden) {\n    if(isHidden) {\n        gameDiv.style.display = 'none'\n    }\n    else {\n        gameDiv.style.display = 'block'\n    } \n}\n\nfunction isWelcomeDivHidden(isHidden) {\n    if(isHidden) {\n        welcomeDiv.style.display = 'none'\n    }\n    else {\n        welcomeDiv.style.display = 'block'\n    }\n}\n\nfunction isWinnerDivHidden(isHidden) {\n    if(isHidden) {\n        winnerDiv.style.display = 'none'\n    }\n    else {\n        winnerDiv.style.display = 'block'\n    }\n}\n\nfunction setName(name){\n    playerName = name;\n    playerText.innerText = name + ':';\n}\n\nfunction isThereAWinner(){\n    return computerScore >= 1;\n}\n\nfunction setWinnerHeadline(){\n    if(computerScore >= 1){\n        winnerHeadline.innerText = 'The Computer beat you...';\n    }\n}\n\n// Datorns val\nfunction computerTurn() {\n    const randomNumber = Math.floor(Math.random()*3+1);\n\n    switch (randomNumber) {\n        case 1:\n            computer = 'ROCK';\n            break;\n        case 2:\n            computer = 'PAPER';\n            break;\n        case 3:\n            computer = 'SCISSORS';\n            break;\n    }\n}\n\n// Jämför datorns val med spelarens\nfunction checkWinner(){\n    if (player === computer) {\n        return \"Tie!\";\n    } else if (player === \"ROCK\" && computer === \"SCISSORS\") {\n        playerScore++;\n        return playerName + \" wins this round!\";\n    } else if (player === \"PAPER\" && computer === \"ROCK\") {\n        playerScore++;\n        return playerName + \" wins this round!\";\n    } else if (player === \"SCISSORS\" && computer === \"PAPER\") {\n        playerScore++;\n        return playerName + \" wins this round!\";\n    } else {\n        computerScore++;\n        return \"The Computer wins this round!\";\n    }\n}"],"names":["$735b27629e838dcd$var$url","async","$735b27629e838dcd$export$74a133de83b5ff00","fetch","json","$735b27629e838dcd$var$sortHighscoreList","highscoreList","array","forEach","element","push","sort","a","b","score","reverse","$735b27629e838dcd$export$4a5fb616e7f60cc3","newAttempt","console","log","sortedNewHighscoreList","pop","sortedArray","options","method","body","JSON","stringify","headers","response","data","$735b27629e838dcd$var$putHighscoreList","$735b27629e838dcd$export$418fdb546096b279","div","players","highscoreh2","document","createElement","innerText","name","append","$735b27629e838dcd$var$displayHighscoreList","$3fba0bda95caa784$var$playerText","querySelector","$3fba0bda95caa784$var$computerText","$3fba0bda95caa784$var$resultText","$3fba0bda95caa784$var$computerPoints","$3fba0bda95caa784$var$playerPoints","$3fba0bda95caa784$var$playerNameTxt","$3fba0bda95caa784$var$playerNameBtn","$3fba0bda95caa784$var$choiceBtns","querySelectorAll","$3fba0bda95caa784$var$restartBtn","$3fba0bda95caa784$var$winnerHeadline","$3fba0bda95caa784$var$welcomeDiv","$3fba0bda95caa784$var$gameDiv","$3fba0bda95caa784$var$winnerDiv","$3fba0bda95caa784$var$highscoreDiv","$3fba0bda95caa784$var$player","$3fba0bda95caa784$var$computer","$3fba0bda95caa784$var$result","$3fba0bda95caa784$var$playerScore","$3fba0bda95caa784$var$computerScore","$3fba0bda95caa784$var$playerName","$3fba0bda95caa784$var$isGameDivHidden","isHidden","style","display","$3fba0bda95caa784$var$isWelcomeDivHidden","$3fba0bda95caa784$var$isWinnerDivHidden","button","addEventListener","textContent","Math","floor","random","$3fba0bda95caa784$var$computerTurn","event","preventDefault","value","setTimeout","window","location","reload","onload"],"version":3,"file":"index.49579d6f.js.map"}